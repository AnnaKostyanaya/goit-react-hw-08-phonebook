{"version":3,"file":"static/js/13.d41712e9.chunk.js","mappings":"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","sources":["components/RegisterForm/fields.js","components/RegisterForm/initialState.js","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","redux/auth/auth-selectors.js","webpack://react-homework-template/./src/shared/components/Button/Button.module.css?4d6c","shared/components/Button/Button.jsx","webpack://react-homework-template/./src/shared/components/TextField/TextField.module.css?2d5d","shared/components/TextField/TextField.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","shared/hooks/useForm.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["const fields = {\n    name: {\n        type: \"text\",\n        name: \"name\",\n        required: true,\n        label: \"User name\",\n        placeholder: \"User name\",\n    },\n    email: {\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        label: \"User email\",\n        placeholder: \"User email\",\n    },\n    password: {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        label: \"User password\",\n        placeholder: \"User password\",\n    },\n};\n\nexport default fields;","const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\"\n}\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\"};","import TextField from \"../../shared/components/TextField/TextField\";\nimport Button from \"../../shared/components/Button/Button\";\n\nimport useForm from \"../../shared/hooks/useForm\";\n\nimport fields from \"./fields\";\nimport initialState from \"./initialState\";\n\nimport styles from \"./RegisterForm.module.css\";\n\nconst RegisterForm = ({onSubmit}) => {\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n    const {name, email, password} = state;\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.form}>\n            <TextField value={name} handleChange={handleChange} {...fields.name} />\n            <TextField value={email} handleChange={handleChange} {...fields.email} />\n            <TextField value={password} handleChange={handleChange} {...fields.password} />\n            <Button variant=\"contained\">Register</Button>\n        </form>\n    )\n}\n\nexport default RegisterForm;","import { useSelector, useDispatch } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nimport {signup} from \"../../redux/auth/auth-operations\";\nimport {isUserLogin} from \"../../redux/auth/auth-selectors\";\n\nimport RegisterForm from \"../../components/RegisterForm/RegisterForm\";\n\nconst RegisterPage = () => {\n    const isLogin = useSelector(isUserLogin);\n    const dispatch = useDispatch();\n\n    const handleSignup = (data) => {\n        dispatch(signup(data));\n    }\n\n    if(isLogin) {\n        return <Navigate to=\"/contacts\" />\n    }\n\n    return (\n        <div>\n            <h1>Register page</h1>\n            <RegisterForm onSubmit={handleSignup} />\n        </div>\n    )\n}\n\nexport default RegisterPage;","export const isUserLogin = ({auth}) => auth.isLogin;\nexport const getUser = ({auth}) => auth.user;\nexport const getAuth = ({auth}) => {\n    const {isLogin, token} = auth;\n    return {isLogin, token};\n}","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__wi4ey\"};","import styles from \"./Button.module.css\";\n\nconst Button = ({children, type = \"submit\"}) =>{\n    return <button type={type} className={styles.btn}>{children}</button>\n}\n\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TextField_wrapper__OQN5w\",\"field\":\"TextField_field__f880x\"};","import { useMemo } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport styles from \"./TextField.module.css\";\n\nconst TextField = ({label, handleChange, ...props}) => {\n    const id = useMemo(()=> nanoid(), []);\n\n    return (\n        <div className={styles.wrapper}>\n            <label htmlFor={id}>{label}</label>\n            <input className={styles.field} id={id} onChange={handleChange} {...props} />\n        </div>\n    )\n}\n\nexport default TextField;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { useState, useCallback } from \"react\";\n\nconst useForm = ({initialState, onSubmit})=> {\n    const [state, setState] = useState({...initialState})\n\n    const handleChange = useCallback(({target}) => {\n        const {name, value} = target;\n        setState(prevState => {\n            return {...prevState, [name]: value}\n        })\n    }, [setState]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["name","type","required","label","placeholder","email","password","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","styles","TextField","value","fields","Button","variant","isLogin","useSelector","isUserLogin","dispatch","useDispatch","to","data","signup","auth","getUser","user","getAuth","token","children","props","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","id","useMemo","nanoid","htmlFor","onChange","useState","setState","useCallback","prevState","e","preventDefault","_objectWithoutPropertiesLoose","sourceKeys","keys","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"sourceRoot":""}