{"version":3,"file":"static/js/605.ba1fbe9c.chunk.js","mappings":"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","sources":["components/LoginForm/fields.js","components/LoginForm/initialState.js","webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://react-homework-template/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx","redux/auth/auth-selectors.js","webpack://react-homework-template/./src/shared/components/Button/Button.module.css?4d6c","shared/components/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://react-homework-template/./src/shared/components/TextField/TextField.module.css?2d5d","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["const fields = {\n    email: {\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        label: \"User email\",\n        placeholder: \"User email\",\n    },\n    password: {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        label: \"User password\",\n        placeholder: \"User password\",\n    },\n};\n\nexport default fields;","const initialState = {\n    email: \"\",\n    password: \"\"\n}\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"text\":\"LoginForm_text__um7cL\"};","import TextField from \"../../shared/components/TextField/TextField\";\nimport Button from \"../../shared/components/Button/Button\";\n\nimport useForm from \"../../shared/hooks/useForm\";\n\nimport fields from \"./fields\";\nimport initialState from \"./initialState\";\n\nimport styles from \"./LoginForm.module.css\";\nimport PropTypes from 'prop-types';\n\nimport { useSelector } from \"react-redux\";\nimport { getDetailError } from \"../../redux/auth/auth-selectors\";\n\nconst LoginForm = ({onSubmit}) => {\n    \n    const detailError = useSelector(getDetailError);\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n    const { email, password} = state;\n\n    return (\n    <>\n        <form onSubmit={handleSubmit} className={styles.form}>\n            <TextField value={email} handleChange={handleChange} {...fields.email} />\n            <TextField value={password} handleChange={handleChange} {...fields.password} />\n            <Button variant=\"contained\">Register</Button>\n        </form>\n        {(detailError === \"/users/login\") && <p className={styles.text}>Login or password error. Try again.</p>}\n    </>\n    )\n}\n\nexport default LoginForm;\n\nLoginForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"LoginPage_header__6MkGA\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nimport {login} from \"../../redux/auth/auth-operations\";\nimport {isUserLogin} from \"../../redux/auth/auth-selectors\";\n\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\nimport style from \"../LoginPage/LoginPage.module.css\";\nconst LoginPage = () => {\n    const isLogin = useSelector(isUserLogin);\n    const dispatch = useDispatch();\n\n    const handleLogin = (data) => {\n        dispatch(login(data));\n    }\n\n    if(isLogin) {\n        return <Navigate to=\"/contacts\" />\n    }\n\n    return (\n        <div>\n            <h1 className={style.header}>Login page</h1>\n            <LoginForm onSubmit={handleLogin} />\n        </div>\n    )\n}\n\nexport default LoginPage;","export const isUserLogin = ({auth}) => auth.isLogin;\nexport const getUser = ({auth}) => auth.user;\nexport const getAuth = ({auth}) => {\n    const {isLogin, token} = auth;\n    return {isLogin, token};\n}\nexport const getError = ({auth}) => {\n    if (auth.error === null) {\n        return\n    } else {\n    return auth.error;\n    }\n};\n\nexport const getDetailError = ({auth}) => {\n    if (auth.error === null) {\n        return\n    } else {\n    return auth.error;\n    }\n};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__wi4ey\"};","import styles from \"./Button.module.css\";\nimport PropTypes from 'prop-types';\n\nconst Button = ({children, type}) =>{\n    return <button type={type} className={styles.btn}>{children}</button>\n}\n\nexport default Button;\n\nButton.propTypes = {\n    children: PropTypes.string.isRequired,\n    type: PropTypes.string,\n};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TextField_wrapper__OQN5w\",\"field\":\"TextField_field__f880x\"};","import { useMemo } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport PropTypes from 'prop-types';\n\nimport styles from \"./TextField.module.css\";\n\nconst TextField = ({label, handleChange, ...props}) => {\n    const id = useMemo(()=> nanoid(), []);\n\n    return (\n        <div className={styles.wrapper}>\n            <label htmlFor={id}>{label}</label>\n            <input className={styles.field} autoComplete={label} id={id} onChange={handleChange} {...props} />\n        </div>\n    )\n}\n\nexport default TextField;\n\nTextField.propTypes = {\n    handleChange: PropTypes.func.isRequired,\n    label: PropTypes.string.isRequired,\n};\n","import { useState, useCallback } from \"react\";\n\nconst useForm = ({initialState, onSubmit})=> {\n    const [state, setState] = useState({...initialState})\n\n    const handleChange = useCallback(({target}) => {\n        const {name, value} = target;\n        setState(prevState => {\n            return {...prevState, [name]: value}\n        })\n    }, [setState]);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        onSubmit({...state});\n        setState({...initialState});\n    };\n\n    return { state, setState, handleChange, handleSubmit }\n}\n\nexport default useForm;","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["email","type","name","required","label","placeholder","password","onSubmit","detailError","useSelector","getDetailError","useForm","initialState","state","handleChange","handleSubmit","className","styles","TextField","value","fields","Button","variant","isLogin","isUserLogin","dispatch","useDispatch","to","style","data","login","auth","getUser","user","getAuth","token","error","children","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","id","useMemo","nanoid","htmlFor","autoComplete","onChange","useState","setState","useCallback","prevState","event","preventDefault","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"sourceRoot":""}